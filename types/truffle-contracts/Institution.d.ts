/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface InstitutionContract
  extends Truffle.Contract<InstitutionInstance> {
  "new"(
    _id: number | BN | string,
    _name: string,
    sender: string,
    meta?: Truffle.TransactionDetails
  ): Promise<InstitutionInstance>;
}

export interface ModifierAdded {
  name: "ModifierAdded";
  args: {
    by: string;
    modifierAddress: string;
    0: string;
    1: string;
  };
}

export interface ModifierRemoved {
  name: "ModifierRemoved";
  args: {
    by: string;
    modifierAddress: string;
    0: string;
    1: string;
  };
}

type AllEvents = ModifierAdded | ModifierRemoved;

export interface InstitutionInstance extends Truffle.ContractInstance {
  allowedModifiers(
    arg0: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  id(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  issuedCertificates(
    arg0: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string>;

  name(txDetails?: Truffle.TransactionDetails): Promise<string>;

  owner(txDetails?: Truffle.TransactionDetails): Promise<string>;

  update: {
    (_name: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(_name: string, txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(
      _name: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _name: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  createDepartment: {
    (_name: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(_name: string, txDetails?: Truffle.TransactionDetails): Promise<void>;
    sendTransaction(
      _name: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _name: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  updateDepartment: {
    (
      _departmentId: number | BN | string,
      _name: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _departmentId: number | BN | string,
      _name: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _departmentId: number | BN | string,
      _name: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _departmentId: number | BN | string,
      _name: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  department(
    _from: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<{ id: BN; name: string }>;

  listDepartments(
    _from: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<{ id: BN; name: string }[]>;

  departmentsLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  staffMember(
    _from: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<{ id: BN; name: string; departmentId: BN; active: boolean }>;

  staffMembersLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  createStaffMember: {
    (
      _name: string,
      _departmentId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _name: string,
      _departmentId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _name: string,
      _departmentId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _name: string,
      _departmentId: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  updateStaffMember: {
    (
      _staffMemberId: number | BN | string,
      _name: string,
      _departmentId: number | BN | string,
      _active: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      _staffMemberId: number | BN | string,
      _name: string,
      _departmentId: number | BN | string,
      _active: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _staffMemberId: number | BN | string,
      _name: string,
      _departmentId: number | BN | string,
      _active: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _staffMemberId: number | BN | string,
      _name: string,
      _departmentId: number | BN | string,
      _active: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  listModifiers(
    _from: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<string[]>;

  modifiersLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  addModifier: {
    (_modifier: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _modifier: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _modifier: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _modifier: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  removeModifier: {
    (_modifier: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _modifier: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _modifier: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _modifier: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  allowedToRemove(
    _sender: string,
    _toRemove: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  allowed(
    _modifierAddress: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<boolean>;

  addCertificate: {
    (_certificate: string, txDetails?: Truffle.TransactionDetails): Promise<
      Truffle.TransactionResponse<AllEvents>
    >;
    call(
      _certificate: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<void>;
    sendTransaction(
      _certificate: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      _certificate: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  methods: {
    allowedModifiers(
      arg0: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;

    id(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    issuedCertificates(
      arg0: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;

    name(txDetails?: Truffle.TransactionDetails): Promise<string>;

    owner(txDetails?: Truffle.TransactionDetails): Promise<string>;

    update: {
      (_name: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _name: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _name: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _name: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    createDepartment: {
      (_name: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _name: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _name: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _name: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    updateDepartment: {
      (
        _departmentId: number | BN | string,
        _name: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _departmentId: number | BN | string,
        _name: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _departmentId: number | BN | string,
        _name: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _departmentId: number | BN | string,
        _name: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    department(
      _from: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{ id: BN; name: string }>;

    listDepartments(
      _from: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{ id: BN; name: string }[]>;

    departmentsLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    staffMember(
      _from: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{ id: BN; name: string; departmentId: BN; active: boolean }>;

    staffMembersLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    createStaffMember: {
      (
        _name: string,
        _departmentId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _name: string,
        _departmentId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _name: string,
        _departmentId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _name: string,
        _departmentId: number | BN | string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    updateStaffMember: {
      (
        _staffMemberId: number | BN | string,
        _name: string,
        _departmentId: number | BN | string,
        _active: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        _staffMemberId: number | BN | string,
        _name: string,
        _departmentId: number | BN | string,
        _active: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _staffMemberId: number | BN | string,
        _name: string,
        _departmentId: number | BN | string,
        _active: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _staffMemberId: number | BN | string,
        _name: string,
        _departmentId: number | BN | string,
        _active: boolean,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    listModifiers(
      _from: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string[]>;

    modifiersLength(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    addModifier: {
      (_modifier: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _modifier: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _modifier: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _modifier: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    removeModifier: {
      (_modifier: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _modifier: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _modifier: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _modifier: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    allowedToRemove(
      _sender: string,
      _toRemove: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;

    allowed(
      _modifierAddress: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;

    addCertificate: {
      (_certificate: string, txDetails?: Truffle.TransactionDetails): Promise<
        Truffle.TransactionResponse<AllEvents>
      >;
      call(
        _certificate: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<void>;
      sendTransaction(
        _certificate: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        _certificate: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    "listStaffMembers(uint256,bool)"(
      _from: number | BN | string,
      skipInactive: boolean,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{ id: BN; name: string; departmentId: BN; active: boolean }[]>;

    "listStaffMembers(uint256)"(
      _from: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{ id: BN; name: string; departmentId: BN; active: boolean }[]>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
